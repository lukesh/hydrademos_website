<?xml version="1.0" encoding="utf-8"?>
<configuration>

   <!-- leave blank to use default application handler
        otherwise enter a fully qualified type name for
        your handler. A handler must implement
        Weborb.Messaging.Api.IScopeHandler or can simply extend
        Weborb.Messaging.Server.Adapter.ApplicationAdapter -->        
   <application-handler>Weborb.Data.Management.DataService</application-handler>
   
   <!-- An absolute path to a directory where application stores and 
        retrieves its streams. -->        
   <streams-path></streams-path>
   
   <extensibility>
       <!-- A class responsible for constructing paths to the stream files.
            Must be an implementation of Weborb.Messaging.Api.Stream.IStreamFilenameGenerator -->
       <streamFilenameGenerator>Weborb.Messaging.Server.Stream.DefaultStreamFilenameGenerator</streamFilenameGenerator>

       <!-- Service for consumer objects, used to get pushed messages at consumer endpoint.
            Must be an implementation of Weborb.Messaging.Api.Stream.IConsumerService -->
       <consumerService>Weborb.Messaging.Server.Stream.ConsumerService</consumerService>

        <!-- Scope service extension that provides method to get streamable file services set
        Must be an implementation of Weborb.Messaging.Server.IO.IStreamableFileFactory-->
       <streamableFileFactory>Weborb.Messaging.Server.IO.StreamableFileFactory</streamableFileFactory>

        <!-- Service that supports periodic execution of jobs, adding, removing and
             getting their name as list. Must be an implementation of 
             Weborb.Messaging.Api.Scheduling.ISchedulingService -->
       <schedulingService>Weborb.Messaging.Server.Scheduling.Scheduler</schedulingService>

       <!-- A class responsible for handling of the stream methods that can be called through RTMP. 
            Must be an implementation of Weborb.Messaging.Api.Stream.IStreamService -->
       <streamService>Weborb.Messaging.Server.Stream.StreamService</streamService>

       <!-- Central unit to get access to different types of provider inputs.
            Must be an implementation of Weborb.Messaging.Api.Stream.IProviderService -->
       <providerService>Weborb.Messaging.Server.Stream.ProviderService</providerService>

       <!-- Service that supports protecting access to streams. 
             Must be an implementation of Weborb.Messaging.Api.Stream.IStreamSecurityService -->
       <streamSecurityService></streamSecurityService>

       <!-- A service that controls bandwidth of IFlowControllable objects. Must be an implementation
            of Weborb.Messaging.Api.Stream.IFlowControlService -->
       <flowControlService>Weborb.Messaging.Server.Stream.DummyFlowControlService</flowControlService>

       <!-- Factory class responsible for creating an instance of video codec. Must be an 
            implementation of Weborb.Messaging.Api.Stream.IVideoCodecFactory -->
       <videoCodecFactory>Weborb.Messaging.Server.Stream.VideoCodecFactory</videoCodecFactory>

       <!-- A class responsible for managing creation and retrieval of remote shared objects. 
            Must be an implementation of Weborb.Messaging.Api.SO.ISharedObjectService -->   
       <sharedObjectService>Weborb.Messaging.Server.SO.SharedObjectService</sharedObjectService>   
   </extensibility>
</configuration>
